{"version":3,"sources":["webpack:///static/js/vendor.1f5e8318ad6ac8ccd2de.js","webpack:///./~/._lib-flexible@0.3.2@lib-flexible/flexible.js","webpack:///./~/._vue-resource@0.7.4@vue-resource/dist/vue-resource.common.js","webpack:///./~/._vue-router@0.7.13@vue-router/dist/vue-router.js","webpack:///./~/._vue-swipe@0.2.7@vue-swipe/dist/vue-swipe.js","webpack:///./~/._vue@1.0.28@vue/dist/vue.common.js","webpack:///./~/._css-loader@0.23.1@css-loader/lib/css-base.js","webpack:///./~/._vue-style-loader@1.0.0@vue-style-loader/addStyles.js"],"names":["webpackJsonp","41","module","exports","win","lib","refreshRem","width","docEl","getBoundingClientRect","dpr","rem","style","fontSize","flexible","tid","doc","document","documentElement","metaEl","querySelector","flexibleEl","scale","console","warn","match","getAttribute","parseFloat","parseInt","content","initialDpr","maximumDpr","toFixed","isIPhone","navigator","appVersion","devicePixelRatio","setAttribute","createElement","firstElementChild","appendChild","wrap","write","innerHTML","addEventListener","clearTimeout","setTimeout","e","persisted","readyState","body","rem2px","d","val","this","px2rem","window","74","Util","Vue","util","config","msg","silent","debug","error","nextTick","cb","ctx","trim","str","replace","toLower","toLowerCase","isString","isFunction","isObject","obj","_typeof","isPlainObject","Object","getPrototypeOf","prototype","options","fn","opts","call","merge","bind","$vm","$options","each","iterator","i","key","length","hasOwnProperty","extend","target","args","array","slice","arguments","forEach","arg","_merge","source","deep","isArray","undefined","root","next","url","query","urlParams","keys","Url","params","value","indexOf","legacy","variables","slash","name","push","encodeUriSegment","encodeUriQuery","spaces","encodeURIComponent","expand","tmpl","parse","expanded","apply","vars","template","operators","context","_","expression","literal","operator","values","charAt","substr","split","variable","tmp","exec","getValues","separator","join","encodeReserved","modifier","result","isDefined","toString","substring","encodeValue","isKeyOperator","Array","filter","k","map","part","test","encodeURI","transform","self","transforms","handler","factory","vm","serialize","scope","hash","plain","add","Promise$2","executor","state","PENDING","deferred","promise","x","resolve","r","reject","Promise$1","PromiseObj","xdrClient","request","xdr","XDomainRequest","response","cancel","abort","open","method","event","data","responseText","status","statusText","timeout","onload","onabort","onerror","ontimeout","onprogress","send","crossOrigin","requestUrl","protocol","originUrl","host","jsonpClient","script","callback","Math","random","jsonp","type","src","async","removeChild","interceptor","client","when","fulfilled","rejected","then","xhrClient","xhr","XMLHttpRequest","headers","getAllResponseHeaders","upload","header","setRequestHeader","Client","parseHeaders","ok","row","Http","interceptors","Error","success","Resource","actions","resource","action","$http","plugin","installed","http","Promise","defineProperties","$url","get","$resource","$promise","_this","Symbol","constructor","ie","documentMode","el","escape","href","port","hostname","pathname","search","RESOLVED","REJECTED","all","iterable","resolver","count","race","p$1","TypeError","called","notify","reason","shift","onResolved","onRejected","catch","p","finally","always","location","supportCors","exports$1","_request","emulateHTTP","exports$2","emulateJSON","JSON","stringify","_response","exports$3","exports$4","beforeSend","exports$5","exports$6","toUpperCase","common","custom","exports$7","jsonType","Content-Type","put","post","patch","delete","Accept","X-Requested-With","save","update","remove","use","75","__webpack_require__","global","Target","path","matcher","delegate","Matcher","routes","children","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","len","l","route","eachRoute","baseRoute","binding","addRouteCallback","noWarning","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","names","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","sort","a","b","recognizeChar","ch","concat","RecognizeResults","queryParams","findHandler","handlers","regex","captures","currentCapture","j","m","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","warn$1","resolvePath","base","relative","append","stack","pop","unshift","isPromise","getRouteConfig","component","resolveAsyncComponent","components","_resolveComponent","Component","mapParams","genQuery","canReuse","view","transition","childVM","canReuseFn","to","from","canDeactivate","fromComponent","hook","callHook","expectBoolean","canActivate","aborted","deactivate","callHooks","activate","depth","reuse","activateQueue","saveChildView","_bound","setComponent","activateHook","dataHook","waitForData","activated","loading","$loadingRouteData","unbuild","build","_meta","created","_routerView","keepAlive","cachedChildView","_keepAliveRouterView","childView","cleanup","$destroy","insert","router","_rendered","_transitionOnLoad","setCurrent","$before","anchor","afterData","afterActivate","loadData","postActivate","$emit","processData","promises","resolvedVal","$set","isPlainOjbect","toArray","applyOverride","_Vue$util","defineReactive","init","_init","_parent","parent","$router","$route","_children","_defineMeta","destroy","_destroy","_isBeingDestroyed","$remove","strats","optionMergeStrategies","hooksToMergeRE","parentVal","childVal","ret","View","componentDef","directive","internalDirectives","viewDef","_isRouterView","_isDynamicLiteral","parentView","$parent","_rootView","_currentTransition","done","unbind","elementDirective","Link","sameOrigin","link","toggleClasses","_bind","addClass","removeClass","onPriority","priority","LINK_UPDATE","activeId","id","String","childLinks","querySelectorAll","existingId","$on","activeIds","updateClasses","$off","unwatch","$watch","onRouteUpdate","removeAttribute","tagName","onClick","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","preventDefault","go","parentNode","history","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","RegExp","queryStringRE","regexEscapeRE","isAbsolute","mode","formatPath","_linkActiveClass","dest","trailingSlashRE","removeEventListener","guardComponent","comp","babelHelpers","classCallCheck","instance","Constructor","willAddRoute","addChild","contextEntered","specials","escapeRegex","validChars","generate","invalidChars","repeat","child","isEqual","chars","returned","oCreate","create","proto","F","splice","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","solutions","hashRE","HTML5History","_ref","onChange","baseEl","start","listener","stop","replaceState","pos","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","raw","formattedPath","isAbsoloute","prefix","AbstractHistory","currentPath","RouteTransition","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","reverse","matched","reuseQueue","runQueue","_onTransitionValidated","_view","queue","step","index","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","res","nextWithData","exposed","hooks","internalKeysRE","Route","_recognizer","reduce","prev","cur","_notFoundHandler","defineProperty","enumerable","freeze","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","inBrowser","History","_match","_saveScrollPosition","_map","on","rootPath","_notFound","_addRoute","_addRedirect","alias","_addAlias","beforeEach","afterEach","App","container","_appContainer","Ctor","_appConstructor","_location","assign","generatedPath","currentParams","targetParams","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","getElementById","scrollX","offsetTop","install","externalVue","76","t","n","s","loaded","c","__esModule","default","SwipeItem","Swipe","o","ready","$dispatch","detached","destroyed","dragState","dragging","userScrolling","animating","pages","timer","reInitTimer","noDrag","props","speed","Number","auto","continuous","Boolean","showIndicators","noDragWhenSingle","prevent","events","swipeItemCreated","reInitPages","swipeItemDestroyed","methods","translate","webkitTransition","webkitTransform","once","$children","$el","doAnimate","u","f","prevPage","currentPage","nextPage","pageWidth","offsetLeft","clientWidth","display","h","g","doOnTouchStart","touches","startTime","Date","startLeft","pageX","startTop","pageY","startTopAbsolute","clientY","offsetWidth","pageHeight","offsetHeight","dragPage","doOnTouchMove","currentLeft","currentTop","currentTopAbsolute","abs","min","max","doOnTouchEnd","isNaN","clearInterval","setInterval","classList","contains","className","hasClass","createTextNode","tag","attachEvent","detachEvent","off","getStyle","setStyle","filters","item","opacity","currentStyle","defaultView","getComputedStyle","77","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","charCodeAt","_toString","toNumber","parsed","toBoolean","stripQuotes","camelize","camelizeRE","toUpper","hyphenate","hyphenateRE","classify","classifyRE","list","OBJECT_STRING","def","writable","configurable","_debounce","func","wait","timestamp","later","last","now","arr","cancellable","cancelled","looseEqual","isNative","Cache","limit","size","head","tail","_keymap","peek","eof","eatSpace","spaceChr","isStringStart","chr","doubleChr","singleChr","isExpStart","expStartChr","isExpEnd","expChrPair","parseString","stringQuote","escapeChr","parseSpecialExp","inExp","startChr","parseExpression","pipeChr","startState","filterArgState","filterState","filterNameState","parseFilterList","parseFilter","parseFilterArguments","processFilterArg","reservedArgRE","dynamic","stripped","parseDirective","hit","cache$1","dir","compileRegex","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","htmlRE","cache","parseText","text","html","first","oneTime","tokens","lastIndex","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","beforeWithTransition","before","removeWithTransition","direction","op","__v_trans","transitionEndEvent","_isCompiled","inDoc","node","ownerDocument","nodeType","getAttr","_attr","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","prepend","firstChild","replaceChild","useCapture","getClass","classname","baseVal","setClass","cls","isIE9","namespaceURI","tar","extractContent","asFragment","rawContent","isTemplate","isFragment","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","createAnchor","persist","createComment","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","nodes","getOuterHTML","outerHTML","cloneNode","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","guardArrayAssets","guardComponents","ids","guardProps","assets","asset","mergeOptions","mergeField","strat","defaultStrat","mixins","mixin","mixinOptions","warnMissing","camelizedId","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","$root","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_vForRemoving","_unlinkFn","_context","_scope","_frag","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","code","formatSubPath","trimmed","maybeUnescapeQuote","nextChar","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression$1","setPath","original","noop","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","efault","suffix","nodeToFragment","textContent","clonedNode","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","Fragment","linker","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","attach","shouldCallRemove","beforeRemove","detach","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","range","floor","getTrackByKey","trackByKey","findVmFromFrag","__vue__","getValue","multi","selected","_value","indexOf$1","keyFilter","codes","charCode","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","kebab","camelPrefixes","normalize$1","_key","callActivateHooks","total","compileProps","propOptions","attr","propsData","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","initProp","$get","_bindDir","propDef","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","pushJob","job","queue$1","flush","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","rect","height","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sortDirectives","groupedMap","priorities","descriptor","DEFAULT_PRIORITY","group","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","skip","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","modifiers","componentLinkFn","previousElementSibling","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","computed","userDef","metas","eventsMixin","registerComponentEvents","eventRE","_fromParent","registerCallbacks","register","onAttached","callAttach","onDetached","callDetach","watch","_initDOMHooks","noop$1","Directive","_locked","_listeners","_host","lifecycleMixin","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","teardown","miscMixin","_applyFilters","oldValue","offset","read","resolved","requested","pendingCallbacks","cbs","dataAPI","clean","asStatement","$arguments","$delete","sync","immediate","filterRE$1","$interpolate","$log","log","domAPI","op1","op2","targetIsDetached","shouldCallHook","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","lifecycleAPI","$compile","limitBy","filterBy","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","definition","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","userAgent","isIE","isAndroid","isIOS","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","Set","entry","newer","older","returnEntry","91","123","40","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","instanceData","defaultData","attached","beforeCompile","compiled","beforeDestroy","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","_withLock","$index","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","defs","symbol","image","circle","ellipse","line","polygon","polyline","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","inMatch","itMatch","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","reset","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","prevKeys","inlineTemplate","pendingComponentCb","pendingRemovals","pendingRemovalCb","invalidatePending","resolveComponent","mountComponent","ComponentName","activateHooks","cached","getCached","newComponent","waitingFor","extraOptions","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","isFinite","stringified","_int","_float","sign","pluralize","delay","version","78","modules","mediaQuery","alreadyImportedModules","79","addStylesToDom","styles","domStyle","stylesInDom","parts","addStyle","listToStyles","newStyles","media","sourceMap","insertStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","removeStyleElement","idx","createStyleElement","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","sources","btoa","unescape","memoize","memo","isOldIE","getElementsByTagName","newList","mayRemove","textStore","replacement"],"mappings":"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","file":"static/js/vendor.1f5e8318ad6ac8ccd2de.js","sourcesContent":["webpackJsonp([2,0],{\n\n/***/ 41:\n/***/ (function(module, exports) {\n\n\t\n\t;(function(win, lib) {\n\t    var doc = win.document;\n\t    var docEl = doc.documentElement;\n\t    var metaEl = doc.querySelector('meta[name=\"viewport\"]');\n\t    var flexibleEl = doc.querySelector('meta[name=\"flexible\"]');\n\t    var dpr = 0;\n\t    var scale = 0;\n\t    var tid;\n\t    var flexible = lib.flexible || (lib.flexible = {});\n\t\n\t    if (metaEl) {\n\t        console.warn('将根据已有的meta标签来设置缩放比例');\n\t        var match = metaEl.getAttribute('content').match(/initial\\-scale=([\\d\\.]+)/);\n\t        if (match) {\n\t            scale = parseFloat(match[1]);\n\t            dpr = parseInt(1 / scale);\n\t        }\n\t    } else if (flexibleEl) {\n\t        var content = flexibleEl.getAttribute('content');\n\t        if (content) {\n\t            var initialDpr = content.match(/initial\\-dpr=([\\d\\.]+)/);\n\t            var maximumDpr = content.match(/maximum\\-dpr=([\\d\\.]+)/);\n\t            if (initialDpr) {\n\t                dpr = parseFloat(initialDpr[1]);\n\t                scale = parseFloat((1 / dpr).toFixed(2));\n\t            }\n\t            if (maximumDpr) {\n\t                dpr = parseFloat(maximumDpr[1]);\n\t                scale = parseFloat((1 / dpr).toFixed(2));\n\t            }\n\t        }\n\t    }\n\t\n\t    if (!dpr && !scale) {\n\t        var isAndroid = win.navigator.appVersion.match(/android/gi);\n\t        var isIPhone = win.navigator.appVersion.match(/iphone/gi);\n\t        var devicePixelRatio = win.devicePixelRatio;\n\t        if (isIPhone) {\n\t            // iOS下，对于2和3的屏，用2倍的方案，其余的用1倍方案\n\t            if (devicePixelRatio >= 3 && (!dpr || dpr >= 3)) {\n\t                dpr = 3;\n\t            } else if (devicePixelRatio >= 2 && (!dpr || dpr >= 2)){\n\t                dpr = 2;\n\t            } else {\n\t                dpr = 1;\n\t            }\n\t        } else {\n\t            // 其他设备下，仍旧使用1倍的方案\n\t            dpr = 1;\n\t        }\n\t        scale = 1 / dpr;\n\t    }\n\t\n\t    docEl.setAttribute('data-dpr', dpr);\n\t    if (!metaEl) {\n\t        metaEl = doc.createElement('meta');\n\t        metaEl.setAttribute('name', 'viewport');\n\t        metaEl.setAttribute('content', 'initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no');\n\t        if (docEl.firstElementChild) {\n\t            docEl.firstElementChild.appendChild(metaEl);\n\t        } else {\n\t            var wrap = doc.createElement('div');\n\t            wrap.appendChild(metaEl);\n\t            doc.write(wrap.innerHTML);\n\t        }\n\t    }\n\t\n\t    function refreshRem(){\n\t        var width = docEl.getBoundingClientRect().width;\n\t        if (width / dpr > 540) {\n\t            width = 540 * dpr;\n\t        }\n\t        var rem = width / 10;\n\t        docEl.style.fontSize = rem + 'px';\n\t        flexible.rem = win.rem = rem;\n\t    }\n\t\n\t    win.addEventListener('resize', function() {\n\t        clearTimeout(tid);\n\t        tid = setTimeout(refreshRem, 300);\n\t    }, false);\n\t    win.addEventListener('pageshow', function(e) {\n\t        if (e.persisted) {\n\t            clearTimeout(tid);\n\t            tid = setTimeout(refreshRem, 300);\n\t        }\n\t    }, false);\n\t\n\t    if (doc.readyState === 'complete') {\n\t        doc.body.style.fontSize = 12 * dpr + 'px';\n\t    } else {\n\t        doc.addEventListener('DOMContentLoaded', function(e) {\n\t            doc.body.style.fontSize = 12 * dpr + 'px';\n\t        }, false);\n\t    }\n\t\n\t\n\t    refreshRem();\n\t\n\t    flexible.dpr = win.dpr = dpr;\n\t    flexible.refreshRem = refreshRem;\n\t    flexible.rem2px = function(d) {\n\t        var val = parseFloat(d) * this.rem;\n\t        if (typeof d === 'string' && d.match(/rem$/)) {\n\t            val += 'px';\n\t        }\n\t        return val;\n\t    }\n\t    flexible.px2rem = function(d) {\n\t        var val = parseFloat(d) / this.rem;\n\t        if (typeof d === 'string' && d.match(/px$/)) {\n\t            val += 'rem';\n\t        }\n\t        return val;\n\t    }\n\t\n\t})(window, window['lib'] || (window['lib'] = {}));\n\n\n/***/ }),\n\n/***/ 74:\n/***/ (function(module, exports) {\n\n\t/*!\n\t * vue-resource v0.7.4\n\t * https://github.com/vuejs/vue-resource\n\t * Released under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n\t  return typeof obj;\n\t} : function (obj) {\n\t  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n\t};\n\t\n\t/**\n\t * Utility functions.\n\t */\n\t\n\tvar util = {};\n\tvar config = {};\n\tvar array = [];\n\tvar console = window.console;\n\tfunction Util (Vue) {\n\t    util = Vue.util;\n\t    config = Vue.config;\n\t}\n\t\n\tvar isArray = Array.isArray;\n\t\n\tfunction warn(msg) {\n\t    if (console && util.warn && (!config.silent || config.debug)) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t}\n\t\n\tfunction error(msg) {\n\t    if (console) {\n\t        console.error(msg);\n\t    }\n\t}\n\t\n\tfunction nextTick(cb, ctx) {\n\t    return util.nextTick(cb, ctx);\n\t}\n\t\n\tfunction trim(str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t}\n\t\n\tfunction toLower(str) {\n\t    return str ? str.toLowerCase() : '';\n\t}\n\t\n\tfunction isString(val) {\n\t    return typeof val === 'string';\n\t}\n\t\n\tfunction isFunction(val) {\n\t    return typeof val === 'function';\n\t}\n\t\n\tfunction isObject(obj) {\n\t    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t}\n\t\n\tfunction options(fn, obj, opts) {\n\t\n\t    opts = opts || {};\n\t\n\t    if (isFunction(opts)) {\n\t        opts = opts.call(obj);\n\t    }\n\t\n\t    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n\t}\n\t\n\tfunction each(obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t}\n\t\n\tfunction extend(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        _merge(target, arg);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction merge(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        _merge(target, arg, true);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n\t            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (isArray(source[key]) && !isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            _merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\t\n\tfunction root (options, next) {\n\t\n\t    var url = next(options);\n\t\n\t    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\tfunction query (options, next) {\n\t\n\t    var urlParams = Object.keys(Url.options.params),\n\t        query = {},\n\t        url = next(options);\n\t\n\t    each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = Url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\tfunction legacy (options, next) {\n\t\n\t    var variables = [],\n\t        url = next(options);\n\t\n\t    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\t\n\t        warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\t\n\t        if (options.params[name]) {\n\t            variables.push(name);\n\t            return slash + encodeUriSegment(options.params[name]);\n\t        }\n\t\n\t        return '';\n\t    });\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t}\n\t\n\tfunction encodeUriSegment(value) {\n\t\n\t    return encodeUriQuery(value, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');\n\t}\n\t\n\tfunction encodeUriQuery(value, spaces) {\n\t\n\t    return encodeURIComponent(value).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, spaces ? '%20' : '+');\n\t}\n\t\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\tfunction expand(url, params, variables) {\n\t\n\t    var tmpl = parse(url),\n\t        expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t}\n\t\n\tfunction parse(template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n\t        variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function expand(context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null,\n\t                        values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t                } else {\n\t                    return encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t}\n\t\n\tfunction getValues(context, operator, key, modifier) {\n\t\n\t    var value = context[key],\n\t        result = [];\n\t\n\t    if (isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            result.push(encodeValue(operator, value[k], k));\n\t                        }\n\t                    });\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        tmp.push(encodeValue(operator, value));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction isDefined(value) {\n\t    return value !== undefined && value !== null;\n\t}\n\t\n\tfunction isKeyOperator(operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t}\n\t\n\tfunction encodeValue(operator, value, key) {\n\t\n\t    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t}\n\t\n\tfunction encodeReserved(str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t}\n\t\n\tfunction template (options) {\n\t\n\t    var variables = [],\n\t        url = expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\t\n\tfunction Url(url, params) {\n\t\n\t    var self = this || {},\n\t        options = url,\n\t        transform;\n\t\n\t    if (isString(url)) {\n\t        options = { url: url, params: params };\n\t    }\n\t\n\t    options = merge({}, Url.options, self.$options, options);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, self.$vm);\n\t    });\n\t\n\t    return transform(options);\n\t}\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [template, legacy, query, root];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [],\n\t        escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = isArray(obj),\n\t        plain = isPlainObject(obj),\n\t        hash;\n\t\n\t    each(obj, function (value, key) {\n\t\n\t        hash = isObject(value) || isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING = 2;\n\t\n\tfunction Promise$2(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise$2.reject = function (r) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise$2.resolve = function (x) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise$2.all = function all(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        var count = 0,\n\t            result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise$2.race = function race(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p$1 = Promise$2.prototype;\n\t\n\tp$1.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.notify = function notify() {\n\t    var promise = this;\n\t\n\t    nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp$1.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise$2(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp$1.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\tvar PromiseObj = window.Promise || Promise$2;\n\t\n\tfunction Promise$1(executor, context) {\n\t\n\t    if (executor instanceof PromiseObj) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new PromiseObj(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromise$1.all = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.all(iterable), context);\n\t};\n\t\n\tPromise$1.resolve = function (value, context) {\n\t    return new Promise$1(PromiseObj.resolve(value), context);\n\t};\n\t\n\tPromise$1.reject = function (reason, context) {\n\t    return new Promise$1(PromiseObj.reject(reason), context);\n\t};\n\t\n\tPromise$1.race = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.race(iterable), context);\n\t};\n\t\n\tvar p = Promise$1.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.then(fulfilled, rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.catch(rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t        callback.call(this);\n\t        return value;\n\t    }, function (reason) {\n\t        callback.call(this);\n\t        return PromiseObj.reject(reason);\n\t    });\n\t};\n\t\n\tp.success = function (callback) {\n\t\n\t    warn('The `success` method has been deprecated. Use the `then` method instead.');\n\t\n\t    return this.then(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.error = function (callback) {\n\t\n\t    warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\t\n\t    return this.catch(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.always = function (callback) {\n\t\n\t    warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\t\n\t    var cb = function cb(response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    };\n\t\n\t    return this.then(cb, cb);\n\t};\n\t\n\tfunction xdrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(),\n\t            response = { request: request },\n\t            handler;\n\t\n\t        request.cancel = function () {\n\t            xdr.abort();\n\t        };\n\t\n\t        xdr.open(request.method, Url(request), true);\n\t\n\t        handler = function handler(event) {\n\t\n\t            response.data = xdr.responseText;\n\t            response.status = xdr.status;\n\t            response.statusText = xdr.statusText || '';\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onabort = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = function () {};\n\t        xdr.onprogress = function () {};\n\t\n\t        xdr.send(request.data);\n\t    });\n\t}\n\t\n\tvar originUrl = Url.parse(location.href);\n\tvar supportCors = 'withCredentials' in new XMLHttpRequest();\n\t\n\tvar exports$1 = {\n\t    request: function request(_request) {\n\t\n\t        if (_request.crossOrigin === null) {\n\t            _request.crossOrigin = crossOrigin(_request);\n\t        }\n\t\n\t        if (_request.crossOrigin) {\n\t\n\t            if (!supportCors) {\n\t                _request.client = xdrClient;\n\t            }\n\t\n\t            _request.emulateHTTP = false;\n\t        }\n\t\n\t        return _request;\n\t    }\n\t};\n\t\n\tfunction crossOrigin(request) {\n\t\n\t    var requestUrl = Url.parse(Url(request));\n\t\n\t    return requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host;\n\t}\n\t\n\tvar exports$2 = {\n\t    request: function request(_request) {\n\t\n\t        if (_request.emulateJSON && isPlainObject(_request.data)) {\n\t            _request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t            _request.data = Url.params(_request.data);\n\t        }\n\t\n\t        if (isObject(_request.data) && /FormData/i.test(_request.data.toString())) {\n\t            delete _request.headers['Content-Type'];\n\t        }\n\t\n\t        if (isPlainObject(_request.data)) {\n\t            _request.data = JSON.stringify(_request.data);\n\t        }\n\t\n\t        return _request;\n\t    },\n\t    response: function response(_response) {\n\t\n\t        try {\n\t            _response.data = JSON.parse(_response.data);\n\t        } catch (e) {}\n\t\n\t        return _response;\n\t    }\n\t};\n\t\n\tfunction jsonpClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var callback = '_jsonp' + Math.random().toString(36).substr(2),\n\t            response = { request: request, data: null },\n\t            handler,\n\t            script;\n\t\n\t        request.params[request.jsonp] = callback;\n\t        request.cancel = function () {\n\t            handler({ type: 'cancel' });\n\t        };\n\t\n\t        script = document.createElement('script');\n\t        script.src = Url(request);\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t\n\t        window[callback] = function (data) {\n\t            response.data = data;\n\t        };\n\t\n\t        handler = function handler(event) {\n\t\n\t            if (event.type === 'load' && response.data !== null) {\n\t                response.status = 200;\n\t            } else if (event.type === 'error') {\n\t                response.status = 404;\n\t            } else {\n\t                response.status = 0;\n\t            }\n\t\n\t            resolve(response);\n\t\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\t\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t}\n\t\n\tvar exports$3 = {\n\t    request: function request(_request) {\n\t\n\t        if (_request.method == 'JSONP') {\n\t            _request.client = jsonpClient;\n\t        }\n\t\n\t        return _request;\n\t    }\n\t};\n\t\n\tvar exports$4 = {\n\t    request: function request(_request) {\n\t\n\t        if (isFunction(_request.beforeSend)) {\n\t            _request.beforeSend.call(this, _request);\n\t        }\n\t\n\t        return _request;\n\t    }\n\t};\n\t\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tvar exports$5 = {\n\t    request: function request(_request) {\n\t\n\t        if (_request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(_request.method)) {\n\t            _request.headers['X-HTTP-Method-Override'] = _request.method;\n\t            _request.method = 'POST';\n\t        }\n\t\n\t        return _request;\n\t    }\n\t};\n\t\n\tvar exports$6 = {\n\t    request: function request(_request) {\n\t\n\t        _request.method = _request.method.toUpperCase();\n\t        _request.headers = extend({}, Http.headers.common, !_request.crossOrigin ? Http.headers.custom : {}, Http.headers[_request.method.toLowerCase()], _request.headers);\n\t\n\t        if (isPlainObject(_request.data) && /^(GET|JSONP)$/i.test(_request.method)) {\n\t            extend(_request.params, _request.data);\n\t            delete _request.data;\n\t        }\n\t\n\t        return _request;\n\t    }\n\t};\n\t\n\t/**\n\t * Timeout Interceptor.\n\t */\n\t\n\tvar exports$7 = function exports() {\n\t\n\t    var timeout;\n\t\n\t    return {\n\t        request: function request(_request) {\n\t\n\t            if (_request.timeout) {\n\t                timeout = setTimeout(function () {\n\t                    _request.cancel();\n\t                }, _request.timeout);\n\t            }\n\t\n\t            return _request;\n\t        },\n\t        response: function response(_response) {\n\t\n\t            clearTimeout(timeout);\n\t\n\t            return _response;\n\t        }\n\t    };\n\t};\n\t\n\tfunction interceptor (handler, vm) {\n\t\n\t    return function (client) {\n\t\n\t        if (isFunction(handler)) {\n\t            handler = handler.call(vm, Promise$1);\n\t        }\n\t\n\t        return function (request) {\n\t\n\t            if (isFunction(handler.request)) {\n\t                request = handler.request.call(vm, request);\n\t            }\n\t\n\t            return when(request, function (request) {\n\t                return when(client(request), function (response) {\n\t\n\t                    if (isFunction(handler.response)) {\n\t                        response = handler.response.call(vm, response);\n\t                    }\n\t\n\t                    return response;\n\t                });\n\t            });\n\t        };\n\t    };\n\t}\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = Promise$1.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\t\n\tfunction xhrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(),\n\t            response = { request: request },\n\t            handler;\n\t\n\t        request.cancel = function () {\n\t            xhr.abort();\n\t        };\n\t\n\t        xhr.open(request.method, Url(request), true);\n\t\n\t        handler = function handler(event) {\n\t\n\t            response.data = 'response' in xhr ? xhr.response : xhr.responseText;\n\t            response.status = xhr.status === 1223 ? 204 : xhr.status; // IE9 status bug\n\t            response.statusText = trim(xhr.statusText || '');\n\t            response.headers = xhr.getAllResponseHeaders();\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onabort = handler;\n\t        xhr.onerror = handler;\n\t        xhr.ontimeout = function () {};\n\t        xhr.onprogress = function () {};\n\t\n\t        if (isPlainObject(request.xhr)) {\n\t            extend(xhr, request.xhr);\n\t        }\n\t\n\t        if (isPlainObject(request.upload)) {\n\t            extend(xhr.upload, request.upload);\n\t        }\n\t\n\t        each(request.headers || {}, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t        });\n\t\n\t        xhr.send(request.data);\n\t    });\n\t}\n\t\n\tfunction Client (request) {\n\t\n\t    var response = (request.client || xhrClient)(request);\n\t\n\t    return Promise$1.resolve(response).then(function (response) {\n\t\n\t        if (response.headers) {\n\t\n\t            var headers = parseHeaders(response.headers);\n\t\n\t            response.headers = function (name) {\n\t\n\t                if (name) {\n\t                    return headers[toLower(name)];\n\t                }\n\t\n\t                return headers;\n\t            };\n\t        }\n\t\n\t        response.ok = response.status >= 200 && response.status < 300;\n\t\n\t        return response;\n\t    });\n\t}\n\t\n\tfunction parseHeaders(str) {\n\t\n\t    var headers = {},\n\t        value,\n\t        name,\n\t        i;\n\t\n\t    if (isString(str)) {\n\t        each(str.split('\\n'), function (row) {\n\t\n\t            i = row.indexOf(':');\n\t            name = trim(toLower(row.slice(0, i)));\n\t            value = trim(row.slice(i + 1));\n\t\n\t            if (headers[name]) {\n\t\n\t                if (isArray(headers[name])) {\n\t                    headers[name].push(value);\n\t                } else {\n\t                    headers[name] = [headers[name], value];\n\t                }\n\t            } else {\n\t\n\t                headers[name] = value;\n\t            }\n\t        });\n\t    }\n\t\n\t    return headers;\n\t}\n\t\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar jsonType = { 'Content-Type': 'application/json' };\n\t\n\tfunction Http(url, options) {\n\t\n\t    var self = this || {},\n\t        client = Client,\n\t        request,\n\t        promise;\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client = interceptor(handler, self.$vm)(client);\n\t    });\n\t\n\t    options = isObject(url) ? url : extend({ url: url }, options);\n\t    request = merge({}, Http.options, self.$options, options);\n\t    promise = client(request).bind(self.$vm).then(function (response) {\n\t\n\t        return response.ok ? response : Promise$1.reject(response);\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            error(response);\n\t        }\n\t\n\t        return Promise$1.reject(response);\n\t    });\n\t\n\t    if (request.success) {\n\t        promise.success(request.success);\n\t    }\n\t\n\t    if (request.error) {\n\t        promise.error(request.error);\n\t    }\n\t\n\t    return promise;\n\t}\n\t\n\tHttp.options = {\n\t    method: 'get',\n\t    data: '',\n\t    params: {},\n\t    headers: {},\n\t    xhr: null,\n\t    upload: null,\n\t    jsonp: 'callback',\n\t    beforeSend: null,\n\t    crossOrigin: null,\n\t    emulateHTTP: false,\n\t    emulateJSON: false,\n\t    timeout: 0\n\t};\n\t\n\tHttp.headers = {\n\t    put: jsonType,\n\t    post: jsonType,\n\t    patch: jsonType,\n\t    delete: jsonType,\n\t    common: { 'Accept': 'application/json, text/plain, */*' },\n\t    custom: { 'X-Requested-With': 'XMLHttpRequest' }\n\t};\n\t\n\tHttp.interceptors = [exports$4, exports$7, exports$3, exports$5, exports$2, exports$6, exports$1];\n\t\n\t['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, data, success, options) {\n\t\n\t        if (isFunction(data)) {\n\t            options = success;\n\t            success = data;\n\t            data = undefined;\n\t        }\n\t\n\t        if (isObject(success)) {\n\t            options = success;\n\t            success = undefined;\n\t        }\n\t\n\t        return this(url, extend({ method: method, data: data, success: success }, options));\n\t    };\n\t});\n\t\n\tfunction Resource(url, params, actions, options) {\n\t\n\t    var self = this || {},\n\t        resource = {};\n\t\n\t    actions = extend({}, Resource.actions, actions);\n\t\n\t    each(actions, function (action, name) {\n\t\n\t        action = merge({ url: url, params: params || {} }, options, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || Http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options = extend({}, action),\n\t        params = {},\n\t        data,\n\t        success,\n\t        error;\n\t\n\t    switch (args.length) {\n\t\n\t        case 4:\n\t\n\t            error = args[3];\n\t            success = args[2];\n\t\n\t        case 3:\n\t        case 2:\n\t\n\t            if (isFunction(args[1])) {\n\t\n\t                if (isFunction(args[0])) {\n\t\n\t                    success = args[0];\n\t                    error = args[1];\n\t\n\t                    break;\n\t                }\n\t\n\t                success = args[1];\n\t                error = args[2];\n\t            } else {\n\t\n\t                params = args[0];\n\t                data = args[1];\n\t                success = args[2];\n\t\n\t                break;\n\t            }\n\t\n\t        case 1:\n\t\n\t            if (isFunction(args[0])) {\n\t                success = args[0];\n\t            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                data = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options.data = data;\n\t    options.params = extend({}, options.params, params);\n\t\n\t    if (success) {\n\t        options.success = success;\n\t    }\n\t\n\t    if (error) {\n\t        options.error = error;\n\t    }\n\t\n\t    return options;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: { method: 'GET' },\n\t    save: { method: 'POST' },\n\t    query: { method: 'GET' },\n\t    update: { method: 'PUT' },\n\t    remove: { method: 'DELETE' },\n\t    delete: { method: 'DELETE' }\n\t\n\t};\n\t\n\tfunction plugin(Vue) {\n\t\n\t    if (plugin.installed) {\n\t        return;\n\t    }\n\t\n\t    Util(Vue);\n\t\n\t    Vue.url = Url;\n\t    Vue.http = Http;\n\t    Vue.resource = Resource;\n\t    Vue.Promise = Promise$1;\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function get() {\n\t                return options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function get() {\n\t                return options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function get() {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function get() {\n\t                var _this = this;\n\t\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, _this);\n\t                };\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(plugin);\n\t}\n\t\n\tmodule.exports = plugin;\n\n/***/ }),\n\n/***/ 75:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ }),\n\n/***/ 76:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t!function(t,e){ true?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.VueSwipe=e():t.VueSwipe=e()}(this,function(){return function(t){function e(i){if(n[i])return n[i].exports;var s=n[i]={exports:{},id:i,loaded:!1};return t[i].call(s.exports,s,s.exports,e),s.loaded=!0,s.exports}var n={};return e.m=t,e.c=n,e.p=\"\",e(0)}([function(t,e,n){\"use strict\";function i(t){return t&&t.__esModule?t:{\"default\":t}}Object.defineProperty(e,\"__esModule\",{value:!0}),e.SwipeItem=e.Swipe=void 0;var s=n(12),r=i(s),a=n(11),o=i(a);e.Swipe=r[\"default\"],e.SwipeItem=o[\"default\"]},function(t,e){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e[\"default\"]={name:\"mt-swipe-item\",ready:function(){this.$dispatch(\"swipeItemCreated\",this)},detached:function(){this.$dispatch(\"swipeItemDestroyed\",this)},destroyed:function(){this.$dispatch(\"swipeItemDestroyed\",this)}}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var i=n(6);e[\"default\"]={name:\"mt-swipe\",created:function(){this.dragState={}},data:function(){return{ready:!1,dragging:!1,userScrolling:!1,animating:!1,index:0,pages:[],timer:null,reInitTimer:null,noDrag:!1}},props:{speed:{type:Number,\"default\":300},auto:{type:Number,\"default\":3e3},continuous:{type:Boolean,\"default\":!0},showIndicators:{type:Boolean,\"default\":!0},noDragWhenSingle:{type:Boolean,\"default\":!0},prevent:{type:Boolean,\"default\":!1}},events:{swipeItemCreated:function(){var t=this;this.ready&&(clearTimeout(this.reInitTimer),this.reInitTimer=setTimeout(function(){t.reInitPages()},100))},swipeItemDestroyed:function(){var t=this;this.ready&&(clearTimeout(this.reInitTimer),this.reInitTimer=setTimeout(function(){t.reInitPages()},100))}},methods:{translate:function(t,e,n,s){var r=this,a=arguments;if(n){this.animating=!0,t.style.webkitTransition=\"-webkit-transform \"+n+\"ms ease-in-out\",setTimeout(function(){return t.style.webkitTransform=\"translate3d(\"+e+\"px, 0, 0)\"},50);var o=!1,l=function(){o||(o=!0,r.animating=!1,t.style.webkitTransition=\"\",t.style.webkitTransform=\"\",s&&s.apply(r,a))};(0,i.once)(t,\"webkitTransitionEnd\",l),setTimeout(l,n+100)}else t.style.webkitTransition=\"\",t.style.webkitTransform=\"translate3d(\"+e+\"px, 0, 0)\"},reInitPages:function(){var t=this.$children;this.noDrag=1===t.length&&this.noDragWhenSingle;var e=[];this.index=0,t.forEach(function(t,n){e.push(t.$el),(0,i.removeClass)(t.$el,\"active\"),0===n&&(0,i.addClass)(t.$el,\"active\")}),this.pages=e},doAnimate:function(t,e){var n=this;if(0!==this.$children.length&&(e||!(this.$children.length<2))){var s,r,a,o,l,u=this.speed||300,c=this.index,d=this.pages,f=d.length;e?(s=e.prevPage,a=e.currentPage,r=e.nextPage,o=e.pageWidth,l=e.offsetLeft):(o=this.$el.clientWidth,a=d[c],s=d[c-1],r=d[c+1],this.continuous&&d.length>1&&(s||(s=d[d.length-1]),r||(r=d[0])),s&&(s.style.display=\"block\",this.translate(s,-o)),r&&(r.style.display=\"block\",this.translate(r,o)));var p,h=this.$children[c].$el;\"prev\"===t?(c>0&&(p=c-1),this.continuous&&0===c&&(p=f-1)):\"next\"===t&&(f-1>c&&(p=c+1),this.continuous&&c===f-1&&(p=0));var g=function(){if(void 0!==p){var t=n.$children[p].$el;(0,i.removeClass)(h,\"active\"),(0,i.addClass)(t,\"active\"),n.index=p}s&&(s.style.display=\"\"),r&&(r.style.display=\"\")};setTimeout(function(){\"next\"===t?(n.translate(a,-o,u,g),r&&n.translate(r,0,u)):\"prev\"===t?(n.translate(a,o,u,g),s&&n.translate(s,0,u)):(n.translate(a,0,u,g),\"undefined\"!=typeof l?(s&&l>0&&n.translate(s,-1*o,u),r&&0>l&&n.translate(r,o,u)):(s&&n.translate(s,-1*o,u),r&&n.translate(r,o,u)))},10)}},next:function(){this.doAnimate(\"next\")},prev:function(){this.doAnimate(\"prev\")},doOnTouchStart:function(t){if(!this.noDrag){var e=this.$el,n=this.dragState,i=t.touches[0];n.startTime=new Date,n.startLeft=i.pageX,n.startTop=i.pageY,n.startTopAbsolute=i.clientY,n.pageWidth=e.offsetWidth,n.pageHeight=e.offsetHeight;var s=this.$children[this.index-1],r=this.$children[this.index],a=this.$children[this.index+1];this.continuous&&this.pages.length>1&&(s||(s=this.$children[this.$children.length-1]),a||(a=this.$children[0])),n.prevPage=s?s.$el:null,n.dragPage=r?r.$el:null,n.nextPage=a?a.$el:null,n.prevPage&&(n.prevPage.style.display=\"block\"),n.nextPage&&(n.nextPage.style.display=\"block\")}},doOnTouchMove:function(t){if(!this.noDrag){var e=this.dragState,n=t.touches[0];e.currentLeft=n.pageX,e.currentTop=n.pageY,e.currentTopAbsolute=n.clientY;var i=e.currentLeft-e.startLeft,s=e.currentTopAbsolute-e.startTopAbsolute,r=Math.abs(i),a=Math.abs(s);if(5>r||r>=5&&a>=1.73*r)return void(this.userScrolling=!0);this.userScrolling=!1,t.preventDefault(),i=Math.min(Math.max(-e.pageWidth+1,i),e.pageWidth-1);var o=0>i?\"next\":\"prev\";e.prevPage&&\"prev\"===o&&this.translate(e.prevPage,i-e.pageWidth),this.translate(e.dragPage,i),e.nextPage&&\"next\"===o&&this.translate(e.nextPage,i+e.pageWidth)}},doOnTouchEnd:function(){if(!this.noDrag){var t=this.dragState,e=new Date-t.startTime,n=null,i=t.currentLeft-t.startLeft,s=t.currentTop-t.startTop,r=t.pageWidth,a=this.index,o=this.pages.length;if(300>e){var l=Math.abs(i)<5&&Math.abs(s)<5;(isNaN(i)||isNaN(s))&&(l=!0),l&&this.$children[this.index].$emit(\"tap\")}300>e&&void 0===t.currentLeft||((300>e||Math.abs(i)>r/2)&&(n=0>i?\"next\":\"prev\"),this.continuous||(0===a&&\"prev\"===n||a===o-1&&\"next\"===n)&&(n=null),this.$children.length<2&&(n=null),this.doAnimate(n,{offsetLeft:i,pageWidth:t.pageWidth,prevPage:t.prevPage,currentPage:t.dragPage,nextPage:t.nextPage}),this.dragState={})}}},destroyed:function(){this.timer&&(clearInterval(this.timer),this.timer=null),this.reInitTimer&&(clearTimeout(this.reInitTimer),this.reInitTimer=null)},ready:function(){var t=this;this.ready=!0,this.auto>0&&(this.timer=setInterval(function(){t.dragging||t.animating||t.next()},this.auto)),this.reInitPages();var e=this.$el;e.addEventListener(\"touchstart\",function(e){t.prevent&&e.preventDefault(),t.animating||(t.dragging=!0,t.userScrolling=!1,t.doOnTouchStart(e))}),e.addEventListener(\"touchmove\",function(e){t.dragging&&t.doOnTouchMove(e)}),e.addEventListener(\"touchend\",function(e){return t.userScrolling?(t.dragging=!1,void(t.dragState={})):void(t.dragging&&(t.doOnTouchEnd(e),t.dragging=!1))})}}},function(t,e){\"use strict\";var n=function(t){return(t||\"\").replace(/^[\\s\\uFEFF]+|[\\s\\uFEFF]+$/g,\"\")},i=function(t,e){if(!t||!e)return!1;if(-1!=e.indexOf(\" \"))throw new Error(\"className should not contain space.\");return t.classList?t.classList.contains(e):(\" \"+t.className+\" \").indexOf(\" \"+e+\" \")>-1},s=function(t,e){if(t){for(var n=t.className,s=(e||\"\").split(\" \"),r=0,a=s.length;a>r;r++){var o=s[r];o&&(t.classList?t.classList.add(o):i(t,o)||(n+=\" \"+o))}t.classList||(t.className=n)}},r=function(t,e){if(t&&e){for(var s=e.split(\" \"),r=\" \"+t.className+\" \",a=0,o=s.length;o>a;a++){var l=s[a];l&&(t.classList?t.classList.remove(l):i(t,l)&&(r=r.replace(\" \"+l+\" \",\" \")))}t.classList||(t.className=n(r))}};t.exports={hasClass:i,addClass:s,removeClass:r}},function(t,e){\"use strict\";var n=function i(t,e){if(!t)return null;var n,s;if(\"string\"==typeof t)return document.createTextNode(t);if(t.tag){n=document.createElement(t.tag);for(var r in t)if(t.hasOwnProperty(r)){if(\"content\"===r||\"tag\"===r)continue;if(\"key\"===r&&e){var a=t[r];a&&(e[a]=n);continue}n[r]=t[r]}var o=t.content;if(o)if(\"string\"==typeof o)s=document.createTextNode(o),n.appendChild(s);else{o instanceof Array||(o=[o]);for(var l=0,u=o.length;u>l;l++){var c=o[l];s=i(c,e),n.appendChild(s)}}}return n};t.exports=n},function(t,e){\"use strict\";var n=function(){return document.addEventListener?function(t,e,n){t&&e&&n&&t.addEventListener(e,n,!1)}:function(t,e,n){t&&e&&n&&t.attachEvent(\"on\"+e,n)}}(),i=function(){return document.removeEventListener?function(t,e,n){t&&e&&t.removeEventListener(e,n,!1)}:function(t,e,n){t&&e&&t.detachEvent(\"on\"+e,n)}}(),s=function(t,e,s){var r=function a(){s&&s.apply(this,arguments),i(t,e,a)};n(t,e,r)};t.exports={on:n,off:i,once:s}},function(t,e,n){\"use strict\";var i=n(3),s=n(5),r=n(7),a=n(4);t.exports={on:s.on,off:s.off,once:s.once,getStyle:r.getStyle,setStyle:r.setStyle,removeClass:i.removeClass,addClass:i.addClass,hasClass:i.hasClass,create:a}},function(t,e){\"use strict\";function n(t){return t.replace(s,function(t,e,n,i){return i?n.toUpperCase():n}).replace(r,\"Moz$1\")}var i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},s=/([\\:\\-\\_]+(.))/g,r=/^moz([A-Z])/,a=Number(document.documentMode),o=9>a?function(t,e){if(!t||!e)return null;e=n(e),\"float\"===e&&(e=\"styleFloat\");try{switch(e){case\"opacity\":try{return t.filters.item(\"alpha\").opacity/100}catch(i){return 1}break;default:return t.style[e]||t.currentStyle?t.currentStyle[e]:null}}catch(i){return t.style[e]}}:function(t,e){if(!t||!e)return null;e=n(e),\"float\"===e&&(e=\"cssFloat\");try{var i=document.defaultView.getComputedStyle(t,\"\");return t.style[e]||i?i[e]:null}catch(s){return t.style[e]}},l=function u(t,e,s){if(t&&e)if(\"object\"===(\"undefined\"==typeof e?\"undefined\":i(e)))for(var r in e)e.hasOwnProperty(r)&&u(t,r,e[r]);else e=n(e),\"opacity\"===e&&9>a?t.style.filter=isNaN(s)?\"\":\"alpha(opacity=\"+100*s+\")\":t.style[e]=s};t.exports={getStyle:o,setStyle:l}},function(t,e){},function(t,e){t.exports=\"<div class=swipe-item> <slot></slot> </div>\"},function(t,e){t.exports='<div class=swipe> <div class=swipe-items-wrap v-el:wrap> <slot></slot> </div> <div class=swipe-indicators v-show=showIndicators> <div class=swipe-indicator v-for=\"page in pages\" :class=\"{ active: $index === index }\"></div> </div> </div>'},function(t,e,n){var i,s;i=n(1),s=n(9),t.exports=i||{},t.exports.__esModule&&(t.exports=t.exports[\"default\"]),s&&((\"function\"==typeof t.exports?t.exports.options:t.exports).template=s)},function(t,e,n){var i,s;n(8),i=n(2),s=n(10),t.exports=i||{},t.exports.__esModule&&(t.exports=t.exports[\"default\"]),s&&((\"function\"==typeof t.exports?t.exports.options:t.exports).template=s)}])});\n\n/***/ }),\n\n/***/ 77:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Vue.js v1.0.28\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delimited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([^-])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/* istanbul ignore next */\n\tfunction isNative(Ctor) {\n\t  return (/native code/.test(Ctor.toString())\n\t  );\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc = undefined;\n\t\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks.length = 0;\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  // the nextTick behavior leverages the microtask queue, which can be accessed\n\t  // via either native Promise.then or MutationObserver.\n\t  // MutationObserver has wider support, however it is seriously bugged in\n\t  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n\t  // completely stops working after triggering a few times... so, if native\n\t  // Promise is available, we will use it:\n\t  /* istanbul ignore if */\n\t  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n\t    var p = Promise.resolve();\n\t    var noop = function noop() {};\n\t    timerFunc = function () {\n\t      p.then(nextTickHandler);\n\t      // in problematic UIWebViews, Promise.then doesn't completely break, but\n\t      // it can get stuck in a weird state where callbacks are pushed into the\n\t      // microtask queue but the queue isn't being flushed, until the browser\n\t      // needs to do some other work, e.g. handle a timer. Therefore we can\n\t      // \"force\" the microtask queue to be flushed by adding an empty timer.\n\t      if (isIOS) setTimeout(noop);\n\t    };\n\t  } else if (typeof MutationObserver !== 'undefined') {\n\t    // use MutationObserver where native Promise is not available,\n\t    // e.g. IE11, iOS7, Android 4.4\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(String(counter));\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = String(counter);\n\t    };\n\t  } else {\n\t    // fallback to setTimeout\n\t    /* istanbul ignore next */\n\t    timerFunc = setTimeout;\n\t  }\n\t\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && isNative(Set)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar len;\n\tvar index;\n\tvar chr;\n\tvar state;\n\tvar startState = 0;\n\tvar filterState = 1;\n\tvar filterNameState = 2;\n\tvar filterArgState = 3;\n\t\n\tvar doubleChr = 0x22;\n\tvar singleChr = 0x27;\n\tvar pipeChr = 0x7C;\n\tvar escapeChr = 0x5C;\n\tvar spaceChr = 0x20;\n\t\n\tvar expStartChr = { 0x5B: 1, 0x7B: 1, 0x28: 1 };\n\tvar expChrPair = { 0x5B: 0x5D, 0x7B: 0x7D, 0x28: 0x29 };\n\t\n\tfunction peek() {\n\t  return str.charCodeAt(index + 1);\n\t}\n\t\n\tfunction next() {\n\t  return str.charCodeAt(++index);\n\t}\n\t\n\tfunction eof() {\n\t  return index >= len;\n\t}\n\t\n\tfunction eatSpace() {\n\t  while (peek() === spaceChr) {\n\t    next();\n\t  }\n\t}\n\t\n\tfunction isStringStart(chr) {\n\t  return chr === doubleChr || chr === singleChr;\n\t}\n\t\n\tfunction isExpStart(chr) {\n\t  return expStartChr[chr];\n\t}\n\t\n\tfunction isExpEnd(start, chr) {\n\t  return expChrPair[start] === chr;\n\t}\n\t\n\tfunction parseString() {\n\t  var stringQuote = next();\n\t  var chr;\n\t  while (!eof()) {\n\t    chr = next();\n\t    // escape char\n\t    if (chr === escapeChr) {\n\t      next();\n\t    } else if (chr === stringQuote) {\n\t      break;\n\t    }\n\t  }\n\t}\n\t\n\tfunction parseSpecialExp(chr) {\n\t  var inExp = 0;\n\t  var startChr = chr;\n\t\n\t  while (!eof()) {\n\t    chr = peek();\n\t    if (isStringStart(chr)) {\n\t      parseString();\n\t      continue;\n\t    }\n\t\n\t    if (startChr === chr) {\n\t      inExp++;\n\t    }\n\t    if (isExpEnd(startChr, chr)) {\n\t      inExp--;\n\t    }\n\t\n\t    next();\n\t\n\t    if (inExp === 0) {\n\t      break;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * syntax:\n\t * expression | filterName  [arg  arg [| filterName arg arg]]\n\t */\n\t\n\tfunction parseExpression() {\n\t  var start = index;\n\t  while (!eof()) {\n\t    chr = peek();\n\t    if (isStringStart(chr)) {\n\t      parseString();\n\t    } else if (isExpStart(chr)) {\n\t      parseSpecialExp(chr);\n\t    } else if (chr === pipeChr) {\n\t      next();\n\t      chr = peek();\n\t      if (chr === pipeChr) {\n\t        next();\n\t      } else {\n\t        if (state === startState || state === filterArgState) {\n\t          state = filterState;\n\t        }\n\t        break;\n\t      }\n\t    } else if (chr === spaceChr && (state === filterNameState || state === filterArgState)) {\n\t      eatSpace();\n\t      break;\n\t    } else {\n\t      if (state === filterState) {\n\t        state = filterNameState;\n\t      }\n\t      next();\n\t    }\n\t  }\n\t\n\t  return str.slice(start + 1, index) || null;\n\t}\n\t\n\tfunction parseFilterList() {\n\t  var filters = [];\n\t  while (!eof()) {\n\t    filters.push(parseFilter());\n\t  }\n\t  return filters;\n\t}\n\t\n\tfunction parseFilter() {\n\t  var filter = {};\n\t  var args;\n\t\n\t  state = filterState;\n\t  filter.name = parseExpression().trim();\n\t\n\t  state = filterArgState;\n\t  args = parseFilterArguments();\n\t\n\t  if (args.length) {\n\t    filter.args = args;\n\t  }\n\t  return filter;\n\t}\n\t\n\tfunction parseFilterArguments() {\n\t  var args = [];\n\t  while (!eof() && state !== filterState) {\n\t    var arg = parseExpression();\n\t    if (!arg) {\n\t      break;\n\t    }\n\t    args.push(processFilterArg(arg));\n\t  }\n\t\n\t  return args;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  dir = {};\n\t  len = str.length;\n\t  index = -1;\n\t  chr = '';\n\t  state = startState;\n\t\n\t  var filters;\n\t\n\t  if (str.indexOf('|') < 0) {\n\t    dir.expression = str.trim();\n\t  } else {\n\t    dir.expression = parseExpression().trim();\n\t    filters = parseFilterList();\n\t    if (filters.length) {\n\t      dir.filters = filters;\n\t    }\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIOS: isIOS,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to register itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression$1(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression$1(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\\"']|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (false) {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression$1(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression$1,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression$1(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    if (false) {\n\t      warn('<' + this.el.tagName.toLowerCase() + ' v-for=\"' + this.expression + '\" v-if=\"' + this.el.getAttribute('v-if') + '\">: ' + 'Using v-if and v-for on the same element is not recommended - ' + 'consider filtering the source Array instead.', this.vm);\n\t    }\n\t\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new instance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.get();\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        var i = indexOf(model, val);\n\t        if (el.checked) {\n\t          if (i < 0) {\n\t            self.set(model.concat(val));\n\t          }\n\t        } else if (i > -1) {\n\t          self.set(model.slice(0, i).concat(model.slice(i + 1)));\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// logic control\n\t// two-way binding\n\t// event handling\n\t// attributes\n\t// ref & el\n\t// cloak\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var propsData = vm.$options.propsData;\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (propsData && (value = propsData[name] || propsData[path]) !== null) {\n\t      // has propsData\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required && (!propsData || !(name in propsData) && !(path in propsData))) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  sortDirectives(dirs);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * sort directives by priority (stable sort)\n\t *\n\t * @param {Array} dirs\n\t */\n\tfunction sortDirectives(dirs) {\n\t  if (dirs.length === 0) return;\n\t\n\t  var groupedMap = {};\n\t  var i, j, k, l;\n\t  var index = 0;\n\t  var priorities = [];\n\t  for (i = 0, j = dirs.length; i < j; i++) {\n\t    var dir = dirs[i];\n\t    var priority = dir.descriptor.def.priority || DEFAULT_PRIORITY;\n\t    var array = groupedMap[priority];\n\t    if (!array) {\n\t      array = groupedMap[priority] = [];\n\t      priorities.push(priority);\n\t    }\n\t    array.push(dir);\n\t  }\n\t\n\t  priorities.sort(function (a, b) {\n\t    return a > b ? -1 : a === b ? 0 : 1;\n\t  });\n\t  for (i = 0, j = priorities.length; i < j; i++) {\n\t    var group = groupedMap[priorities[i]];\n\t    for (k = 0, l = group.length; k < l; k++) {\n\t      dirs[index++] = group[k];\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t\n\t      var componentName = options.el.tagName.toLowerCase();\n\t      if (componentName === 'component' && options.name) {\n\t        componentName += ':' + options.name;\n\t      }\n\t\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + componentName + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    // a textarea which has v-pre attr should skip complie.\n\t    if (getAttr(el, 'v-pre') !== null) {\n\t      return skip;\n\t    }\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for, v-if and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    if (!replacer) {\n\t      return frag;\n\t    }\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression$1(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression$1(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression$1(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Order filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.28';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\n/***/ }),\n\n/***/ 78:\n/***/ (function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ }),\n\n/***/ 79:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.1f5e8318ad6ac8ccd2de.js","\n;(function(win, lib) {\n    var doc = win.document;\n    var docEl = doc.documentElement;\n    var metaEl = doc.querySelector('meta[name=\"viewport\"]');\n    var flexibleEl = doc.querySelector('meta[name=\"flexible\"]');\n    var dpr = 0;\n    var scale = 0;\n    var tid;\n    var flexible = lib.flexible || (lib.flexible = {});\n\n    if (metaEl) {\n        console.warn('将根据已有的meta标签来设置缩放比例');\n        var match = metaEl.getAttribute('content').match(/initial\\-scale=([\\d\\.]+)/);\n        if (match) {\n            scale = parseFloat(match[1]);\n            dpr = parseInt(1 / scale);\n        }\n    } else if (flexibleEl) {\n        var content = flexibleEl.getAttribute('content');\n        if (content) {\n            var initialDpr = content.match(/initial\\-dpr=([\\d\\.]+)/);\n            var maximumDpr = content.match(/maximum\\-dpr=([\\d\\.]+)/);\n            if (initialDpr) {\n                dpr = parseFloat(initialDpr[1]);\n                scale = parseFloat((1 / dpr).toFixed(2));\n            }\n            if (maximumDpr) {\n                dpr = parseFloat(maximumDpr[1]);\n                scale = parseFloat((1 / dpr).toFixed(2));\n            }\n        }\n    }\n\n    if (!dpr && !scale) {\n        var isAndroid = win.navigator.appVersion.match(/android/gi);\n        var isIPhone = win.navigator.appVersion.match(/iphone/gi);\n        var devicePixelRatio = win.devicePixelRatio;\n        if (isIPhone) {\n            // iOS下，对于2和3的屏，用2倍的方案，其余的用1倍方案\n            if (devicePixelRatio >= 3 && (!dpr || dpr >= 3)) {\n                dpr = 3;\n            } else if (devicePixelRatio >= 2 && (!dpr || dpr >= 2)){\n                dpr = 2;\n            } else {\n                dpr = 1;\n            }\n        } else {\n            // 其他设备下，仍旧使用1倍的方案\n            dpr = 1;\n        }\n        scale = 1 / dpr;\n    }\n\n    docEl.setAttribute('data-dpr', dpr);\n    if (!metaEl) {\n        metaEl = doc.createElement('meta');\n        metaEl.setAttribute('name', 'viewport');\n        metaEl.setAttribute('content', 'initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no');\n        if (docEl.firstElementChild) {\n            docEl.firstElementChild.appendChild(metaEl);\n        } else {\n            var wrap = doc.createElement('div');\n            wrap.appendChild(metaEl);\n            doc.write(wrap.innerHTML);\n        }\n    }\n\n    function refreshRem(){\n        var width = docEl.getBoundingClientRect().width;\n        if (width / dpr > 540) {\n            width = 540 * dpr;\n        }\n        var rem = width / 10;\n        docEl.style.fontSize = rem + 'px';\n        flexible.rem = win.rem = rem;\n    }\n\n    win.addEventListener('resize', function() {\n        clearTimeout(tid);\n        tid = setTimeout(refreshRem, 300);\n    }, false);\n    win.addEventListener('pageshow', function(e) {\n        if (e.persisted) {\n            clearTimeout(tid);\n            tid = setTimeout(refreshRem, 300);\n        }\n    }, false);\n\n    if (doc.readyState === 'complete') {\n        doc.body.style.fontSize = 12 * dpr + 'px';\n    } else {\n        doc.addEventListener('DOMContentLoaded', function(e) {\n            doc.body.style.fontSize = 12 * dpr + 'px';\n        }, false);\n    }\n\n\n    refreshRem();\n\n    flexible.dpr = win.dpr = dpr;\n    flexible.refreshRem = refreshRem;\n    flexible.rem2px = function(d) {\n        var val = parseFloat(d) * this.rem;\n        if (typeof d === 'string' && d.match(/rem$/)) {\n            val += 'px';\n        }\n        return val;\n    }\n    flexible.px2rem = function(d) {\n        var val = parseFloat(d) / this.rem;\n        if (typeof d === 'string' && d.match(/px$/)) {\n            val += 'rem';\n        }\n        return val;\n    }\n\n})(window, window['lib'] || (window['lib'] = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._lib-flexible@0.3.2@lib-flexible/flexible.js\n// module id = 41\n// module chunks = 2","/*!\n * vue-resource v0.7.4\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\n/**\n * Utility functions.\n */\n\nvar util = {};\nvar config = {};\nvar array = [];\nvar console = window.console;\nfunction Util (Vue) {\n    util = Vue.util;\n    config = Vue.config;\n}\n\nvar isArray = Array.isArray;\n\nfunction warn(msg) {\n    if (console && util.warn && (!config.silent || config.debug)) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (console) {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nfunction toLower(str) {\n    return str ? str.toLowerCase() : '';\n}\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nfunction extend(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        _merge(target, arg);\n    });\n\n    return target;\n}\n\nfunction merge(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        _merge(target, arg, true);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\nfunction legacy (options, next) {\n\n    var variables = [],\n        url = next(options);\n\n    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\n        warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\n        if (options.params[name]) {\n            variables.push(name);\n            return slash + encodeUriSegment(options.params[name]);\n        }\n\n        return '';\n    });\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\nfunction encodeUriSegment(value) {\n\n    return encodeUriQuery(value, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');\n}\n\nfunction encodeUriQuery(value, spaces) {\n\n    return encodeURIComponent(value).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, spaces ? '%20' : '+');\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function expand(context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, legacy, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$2(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$2.reject = function (r) {\n    return new Promise$2(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$2.resolve = function (x) {\n    return new Promise$2(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$2.all = function all(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$2.race = function race(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$2.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$2(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nvar PromiseObj = window.Promise || Promise$2;\n\nfunction Promise$1(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise$1.all = function (iterable, context) {\n    return new Promise$1(PromiseObj.all(iterable), context);\n};\n\nPromise$1.resolve = function (value, context) {\n    return new Promise$1(PromiseObj.resolve(value), context);\n};\n\nPromise$1.reject = function (reason, context) {\n    return new Promise$1(PromiseObj.reject(reason), context);\n};\n\nPromise$1.race = function (iterable, context) {\n    return new Promise$1(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise$1.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.then(fulfilled, rejected);\n\n    return this;\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.catch(rejected);\n\n    return this;\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return PromiseObj.reject(reason);\n    });\n};\n\np.success = function (callback) {\n\n    warn('The `success` method has been deprecated. Use the `then` method instead.');\n\n    return this.then(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.error = function (callback) {\n\n    warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\n    return this.catch(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.always = function (callback) {\n\n    warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\n    var cb = function cb(response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    };\n\n    return this.then(cb, cb);\n};\n\nfunction xdrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            response = { request: request },\n            handler;\n\n        request.cancel = function () {\n            xdr.abort();\n        };\n\n        xdr.open(request.method, Url(request), true);\n\n        handler = function handler(event) {\n\n            response.data = xdr.responseText;\n            response.status = xdr.status;\n            response.statusText = xdr.statusText || '';\n\n            resolve(response);\n        };\n\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n\n        xdr.send(request.data);\n    });\n}\n\nvar originUrl = Url.parse(location.href);\nvar supportCors = 'withCredentials' in new XMLHttpRequest();\n\nvar exports$1 = {\n    request: function request(_request) {\n\n        if (_request.crossOrigin === null) {\n            _request.crossOrigin = crossOrigin(_request);\n        }\n\n        if (_request.crossOrigin) {\n\n            if (!supportCors) {\n                _request.client = xdrClient;\n            }\n\n            _request.emulateHTTP = false;\n        }\n\n        return _request;\n    }\n};\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host;\n}\n\nvar exports$2 = {\n    request: function request(_request) {\n\n        if (_request.emulateJSON && isPlainObject(_request.data)) {\n            _request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n            _request.data = Url.params(_request.data);\n        }\n\n        if (isObject(_request.data) && /FormData/i.test(_request.data.toString())) {\n            delete _request.headers['Content-Type'];\n        }\n\n        if (isPlainObject(_request.data)) {\n            _request.data = JSON.stringify(_request.data);\n        }\n\n        return _request;\n    },\n    response: function response(_response) {\n\n        try {\n            _response.data = JSON.parse(_response.data);\n        } catch (e) {}\n\n        return _response;\n    }\n};\n\nfunction jsonpClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var callback = '_jsonp' + Math.random().toString(36).substr(2),\n            response = { request: request, data: null },\n            handler,\n            script;\n\n        request.params[request.jsonp] = callback;\n        request.cancel = function () {\n            handler({ type: 'cancel' });\n        };\n\n        script = document.createElement('script');\n        script.src = Url(request);\n        script.type = 'text/javascript';\n        script.async = true;\n\n        window[callback] = function (data) {\n            response.data = data;\n        };\n\n        handler = function handler(event) {\n\n            if (event.type === 'load' && response.data !== null) {\n                response.status = 200;\n            } else if (event.type === 'error') {\n                response.status = 404;\n            } else {\n                response.status = 0;\n            }\n\n            resolve(response);\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\nvar exports$3 = {\n    request: function request(_request) {\n\n        if (_request.method == 'JSONP') {\n            _request.client = jsonpClient;\n        }\n\n        return _request;\n    }\n};\n\nvar exports$4 = {\n    request: function request(_request) {\n\n        if (isFunction(_request.beforeSend)) {\n            _request.beforeSend.call(this, _request);\n        }\n\n        return _request;\n    }\n};\n\n/**\n * HTTP method override Interceptor.\n */\n\nvar exports$5 = {\n    request: function request(_request) {\n\n        if (_request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(_request.method)) {\n            _request.headers['X-HTTP-Method-Override'] = _request.method;\n            _request.method = 'POST';\n        }\n\n        return _request;\n    }\n};\n\nvar exports$6 = {\n    request: function request(_request) {\n\n        _request.method = _request.method.toUpperCase();\n        _request.headers = extend({}, Http.headers.common, !_request.crossOrigin ? Http.headers.custom : {}, Http.headers[_request.method.toLowerCase()], _request.headers);\n\n        if (isPlainObject(_request.data) && /^(GET|JSONP)$/i.test(_request.method)) {\n            extend(_request.params, _request.data);\n            delete _request.data;\n        }\n\n        return _request;\n    }\n};\n\n/**\n * Timeout Interceptor.\n */\n\nvar exports$7 = function exports() {\n\n    var timeout;\n\n    return {\n        request: function request(_request) {\n\n            if (_request.timeout) {\n                timeout = setTimeout(function () {\n                    _request.cancel();\n                }, _request.timeout);\n            }\n\n            return _request;\n        },\n        response: function response(_response) {\n\n            clearTimeout(timeout);\n\n            return _response;\n        }\n    };\n};\n\nfunction interceptor (handler, vm) {\n\n    return function (client) {\n\n        if (isFunction(handler)) {\n            handler = handler.call(vm, Promise$1);\n        }\n\n        return function (request) {\n\n            if (isFunction(handler.request)) {\n                request = handler.request.call(vm, request);\n            }\n\n            return when(request, function (request) {\n                return when(client(request), function (response) {\n\n                    if (isFunction(handler.response)) {\n                        response = handler.response.call(vm, response);\n                    }\n\n                    return response;\n                });\n            });\n        };\n    };\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise$1.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction xhrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            response = { request: request },\n            handler;\n\n        request.cancel = function () {\n            xhr.abort();\n        };\n\n        xhr.open(request.method, Url(request), true);\n\n        handler = function handler(event) {\n\n            response.data = 'response' in xhr ? xhr.response : xhr.responseText;\n            response.status = xhr.status === 1223 ? 204 : xhr.status; // IE9 status bug\n            response.statusText = trim(xhr.statusText || '');\n            response.headers = xhr.getAllResponseHeaders();\n\n            resolve(response);\n        };\n\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = function () {};\n        xhr.onprogress = function () {};\n\n        if (isPlainObject(request.xhr)) {\n            extend(xhr, request.xhr);\n        }\n\n        if (isPlainObject(request.upload)) {\n            extend(xhr.upload, request.upload);\n        }\n\n        each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.data);\n    });\n}\n\nfunction Client (request) {\n\n    var response = (request.client || xhrClient)(request);\n\n    return Promise$1.resolve(response).then(function (response) {\n\n        if (response.headers) {\n\n            var headers = parseHeaders(response.headers);\n\n            response.headers = function (name) {\n\n                if (name) {\n                    return headers[toLower(name)];\n                }\n\n                return headers;\n            };\n        }\n\n        response.ok = response.status >= 200 && response.status < 300;\n\n        return response;\n    });\n}\n\nfunction parseHeaders(str) {\n\n    var headers = {},\n        value,\n        name,\n        i;\n\n    if (isString(str)) {\n        each(str.split('\\n'), function (row) {\n\n            i = row.indexOf(':');\n            name = trim(toLower(row.slice(0, i)));\n            value = trim(row.slice(i + 1));\n\n            if (headers[name]) {\n\n                if (isArray(headers[name])) {\n                    headers[name].push(value);\n                } else {\n                    headers[name] = [headers[name], value];\n                }\n            } else {\n\n                headers[name] = value;\n            }\n        });\n    }\n\n    return headers;\n}\n\n/**\n * Service for sending network requests.\n */\n\nvar jsonType = { 'Content-Type': 'application/json' };\n\nfunction Http(url, options) {\n\n    var self = this || {},\n        client = Client,\n        request,\n        promise;\n\n    Http.interceptors.forEach(function (handler) {\n        client = interceptor(handler, self.$vm)(client);\n    });\n\n    options = isObject(url) ? url : extend({ url: url }, options);\n    request = merge({}, Http.options, self.$options, options);\n    promise = client(request).bind(self.$vm).then(function (response) {\n\n        return response.ok ? response : Promise$1.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return Promise$1.reject(response);\n    });\n\n    if (request.success) {\n        promise.success(request.success);\n    }\n\n    if (request.error) {\n        promise.error(request.error);\n    }\n\n    return promise;\n}\n\nHttp.options = {\n    method: 'get',\n    data: '',\n    params: {},\n    headers: {},\n    xhr: null,\n    upload: null,\n    jsonp: 'callback',\n    beforeSend: null,\n    crossOrigin: null,\n    emulateHTTP: false,\n    emulateJSON: false,\n    timeout: 0\n};\n\nHttp.headers = {\n    put: jsonType,\n    post: jsonType,\n    patch: jsonType,\n    delete: jsonType,\n    common: { 'Accept': 'application/json, text/plain, */*' },\n    custom: { 'X-Requested-With': 'XMLHttpRequest' }\n};\n\nHttp.interceptors = [exports$4, exports$7, exports$3, exports$5, exports$2, exports$6, exports$1];\n\n['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, data, success, options) {\n\n        if (isFunction(data)) {\n            options = success;\n            success = data;\n            data = undefined;\n        }\n\n        if (isObject(success)) {\n            options = success;\n            success = undefined;\n        }\n\n        return this(url, extend({ method: method, data: data, success: success }, options));\n    };\n});\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = extend({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: params || {} }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = extend({}, action),\n        params = {},\n        data,\n        success,\n        error;\n\n    switch (args.length) {\n\n        case 4:\n\n            error = args[3];\n            success = args[2];\n\n        case 3:\n        case 2:\n\n            if (isFunction(args[1])) {\n\n                if (isFunction(args[0])) {\n\n                    success = args[0];\n                    error = args[1];\n\n                    break;\n                }\n\n                success = args[1];\n                error = args[2];\n            } else {\n\n                params = args[0];\n                data = args[1];\n                success = args[2];\n\n                break;\n            }\n\n        case 1:\n\n            if (isFunction(args[0])) {\n                success = args[0];\n            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                data = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n    }\n\n    options.data = data;\n    options.params = extend({}, options.params, params);\n\n    if (success) {\n        options.success = success;\n    }\n\n    if (error) {\n        options.error = error;\n    }\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = Promise$1;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function get() {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function get() {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function get() {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function get() {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._vue-resource@0.7.4@vue-resource/dist/vue-resource.common.js\n// module id = 74\n// module chunks = 2","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._vue-router@0.7.13@vue-router/dist/vue-router.js\n// module id = 75\n// module chunks = 2","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.VueSwipe=e():t.VueSwipe=e()}(this,function(){return function(t){function e(i){if(n[i])return n[i].exports;var s=n[i]={exports:{},id:i,loaded:!1};return t[i].call(s.exports,s,s.exports,e),s.loaded=!0,s.exports}var n={};return e.m=t,e.c=n,e.p=\"\",e(0)}([function(t,e,n){\"use strict\";function i(t){return t&&t.__esModule?t:{\"default\":t}}Object.defineProperty(e,\"__esModule\",{value:!0}),e.SwipeItem=e.Swipe=void 0;var s=n(12),r=i(s),a=n(11),o=i(a);e.Swipe=r[\"default\"],e.SwipeItem=o[\"default\"]},function(t,e){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e[\"default\"]={name:\"mt-swipe-item\",ready:function(){this.$dispatch(\"swipeItemCreated\",this)},detached:function(){this.$dispatch(\"swipeItemDestroyed\",this)},destroyed:function(){this.$dispatch(\"swipeItemDestroyed\",this)}}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var i=n(6);e[\"default\"]={name:\"mt-swipe\",created:function(){this.dragState={}},data:function(){return{ready:!1,dragging:!1,userScrolling:!1,animating:!1,index:0,pages:[],timer:null,reInitTimer:null,noDrag:!1}},props:{speed:{type:Number,\"default\":300},auto:{type:Number,\"default\":3e3},continuous:{type:Boolean,\"default\":!0},showIndicators:{type:Boolean,\"default\":!0},noDragWhenSingle:{type:Boolean,\"default\":!0},prevent:{type:Boolean,\"default\":!1}},events:{swipeItemCreated:function(){var t=this;this.ready&&(clearTimeout(this.reInitTimer),this.reInitTimer=setTimeout(function(){t.reInitPages()},100))},swipeItemDestroyed:function(){var t=this;this.ready&&(clearTimeout(this.reInitTimer),this.reInitTimer=setTimeout(function(){t.reInitPages()},100))}},methods:{translate:function(t,e,n,s){var r=this,a=arguments;if(n){this.animating=!0,t.style.webkitTransition=\"-webkit-transform \"+n+\"ms ease-in-out\",setTimeout(function(){return t.style.webkitTransform=\"translate3d(\"+e+\"px, 0, 0)\"},50);var o=!1,l=function(){o||(o=!0,r.animating=!1,t.style.webkitTransition=\"\",t.style.webkitTransform=\"\",s&&s.apply(r,a))};(0,i.once)(t,\"webkitTransitionEnd\",l),setTimeout(l,n+100)}else t.style.webkitTransition=\"\",t.style.webkitTransform=\"translate3d(\"+e+\"px, 0, 0)\"},reInitPages:function(){var t=this.$children;this.noDrag=1===t.length&&this.noDragWhenSingle;var e=[];this.index=0,t.forEach(function(t,n){e.push(t.$el),(0,i.removeClass)(t.$el,\"active\"),0===n&&(0,i.addClass)(t.$el,\"active\")}),this.pages=e},doAnimate:function(t,e){var n=this;if(0!==this.$children.length&&(e||!(this.$children.length<2))){var s,r,a,o,l,u=this.speed||300,c=this.index,d=this.pages,f=d.length;e?(s=e.prevPage,a=e.currentPage,r=e.nextPage,o=e.pageWidth,l=e.offsetLeft):(o=this.$el.clientWidth,a=d[c],s=d[c-1],r=d[c+1],this.continuous&&d.length>1&&(s||(s=d[d.length-1]),r||(r=d[0])),s&&(s.style.display=\"block\",this.translate(s,-o)),r&&(r.style.display=\"block\",this.translate(r,o)));var p,h=this.$children[c].$el;\"prev\"===t?(c>0&&(p=c-1),this.continuous&&0===c&&(p=f-1)):\"next\"===t&&(f-1>c&&(p=c+1),this.continuous&&c===f-1&&(p=0));var g=function(){if(void 0!==p){var t=n.$children[p].$el;(0,i.removeClass)(h,\"active\"),(0,i.addClass)(t,\"active\"),n.index=p}s&&(s.style.display=\"\"),r&&(r.style.display=\"\")};setTimeout(function(){\"next\"===t?(n.translate(a,-o,u,g),r&&n.translate(r,0,u)):\"prev\"===t?(n.translate(a,o,u,g),s&&n.translate(s,0,u)):(n.translate(a,0,u,g),\"undefined\"!=typeof l?(s&&l>0&&n.translate(s,-1*o,u),r&&0>l&&n.translate(r,o,u)):(s&&n.translate(s,-1*o,u),r&&n.translate(r,o,u)))},10)}},next:function(){this.doAnimate(\"next\")},prev:function(){this.doAnimate(\"prev\")},doOnTouchStart:function(t){if(!this.noDrag){var e=this.$el,n=this.dragState,i=t.touches[0];n.startTime=new Date,n.startLeft=i.pageX,n.startTop=i.pageY,n.startTopAbsolute=i.clientY,n.pageWidth=e.offsetWidth,n.pageHeight=e.offsetHeight;var s=this.$children[this.index-1],r=this.$children[this.index],a=this.$children[this.index+1];this.continuous&&this.pages.length>1&&(s||(s=this.$children[this.$children.length-1]),a||(a=this.$children[0])),n.prevPage=s?s.$el:null,n.dragPage=r?r.$el:null,n.nextPage=a?a.$el:null,n.prevPage&&(n.prevPage.style.display=\"block\"),n.nextPage&&(n.nextPage.style.display=\"block\")}},doOnTouchMove:function(t){if(!this.noDrag){var e=this.dragState,n=t.touches[0];e.currentLeft=n.pageX,e.currentTop=n.pageY,e.currentTopAbsolute=n.clientY;var i=e.currentLeft-e.startLeft,s=e.currentTopAbsolute-e.startTopAbsolute,r=Math.abs(i),a=Math.abs(s);if(5>r||r>=5&&a>=1.73*r)return void(this.userScrolling=!0);this.userScrolling=!1,t.preventDefault(),i=Math.min(Math.max(-e.pageWidth+1,i),e.pageWidth-1);var o=0>i?\"next\":\"prev\";e.prevPage&&\"prev\"===o&&this.translate(e.prevPage,i-e.pageWidth),this.translate(e.dragPage,i),e.nextPage&&\"next\"===o&&this.translate(e.nextPage,i+e.pageWidth)}},doOnTouchEnd:function(){if(!this.noDrag){var t=this.dragState,e=new Date-t.startTime,n=null,i=t.currentLeft-t.startLeft,s=t.currentTop-t.startTop,r=t.pageWidth,a=this.index,o=this.pages.length;if(300>e){var l=Math.abs(i)<5&&Math.abs(s)<5;(isNaN(i)||isNaN(s))&&(l=!0),l&&this.$children[this.index].$emit(\"tap\")}300>e&&void 0===t.currentLeft||((300>e||Math.abs(i)>r/2)&&(n=0>i?\"next\":\"prev\"),this.continuous||(0===a&&\"prev\"===n||a===o-1&&\"next\"===n)&&(n=null),this.$children.length<2&&(n=null),this.doAnimate(n,{offsetLeft:i,pageWidth:t.pageWidth,prevPage:t.prevPage,currentPage:t.dragPage,nextPage:t.nextPage}),this.dragState={})}}},destroyed:function(){this.timer&&(clearInterval(this.timer),this.timer=null),this.reInitTimer&&(clearTimeout(this.reInitTimer),this.reInitTimer=null)},ready:function(){var t=this;this.ready=!0,this.auto>0&&(this.timer=setInterval(function(){t.dragging||t.animating||t.next()},this.auto)),this.reInitPages();var e=this.$el;e.addEventListener(\"touchstart\",function(e){t.prevent&&e.preventDefault(),t.animating||(t.dragging=!0,t.userScrolling=!1,t.doOnTouchStart(e))}),e.addEventListener(\"touchmove\",function(e){t.dragging&&t.doOnTouchMove(e)}),e.addEventListener(\"touchend\",function(e){return t.userScrolling?(t.dragging=!1,void(t.dragState={})):void(t.dragging&&(t.doOnTouchEnd(e),t.dragging=!1))})}}},function(t,e){\"use strict\";var n=function(t){return(t||\"\").replace(/^[\\s\\uFEFF]+|[\\s\\uFEFF]+$/g,\"\")},i=function(t,e){if(!t||!e)return!1;if(-1!=e.indexOf(\" \"))throw new Error(\"className should not contain space.\");return t.classList?t.classList.contains(e):(\" \"+t.className+\" \").indexOf(\" \"+e+\" \")>-1},s=function(t,e){if(t){for(var n=t.className,s=(e||\"\").split(\" \"),r=0,a=s.length;a>r;r++){var o=s[r];o&&(t.classList?t.classList.add(o):i(t,o)||(n+=\" \"+o))}t.classList||(t.className=n)}},r=function(t,e){if(t&&e){for(var s=e.split(\" \"),r=\" \"+t.className+\" \",a=0,o=s.length;o>a;a++){var l=s[a];l&&(t.classList?t.classList.remove(l):i(t,l)&&(r=r.replace(\" \"+l+\" \",\" \")))}t.classList||(t.className=n(r))}};t.exports={hasClass:i,addClass:s,removeClass:r}},function(t,e){\"use strict\";var n=function i(t,e){if(!t)return null;var n,s;if(\"string\"==typeof t)return document.createTextNode(t);if(t.tag){n=document.createElement(t.tag);for(var r in t)if(t.hasOwnProperty(r)){if(\"content\"===r||\"tag\"===r)continue;if(\"key\"===r&&e){var a=t[r];a&&(e[a]=n);continue}n[r]=t[r]}var o=t.content;if(o)if(\"string\"==typeof o)s=document.createTextNode(o),n.appendChild(s);else{o instanceof Array||(o=[o]);for(var l=0,u=o.length;u>l;l++){var c=o[l];s=i(c,e),n.appendChild(s)}}}return n};t.exports=n},function(t,e){\"use strict\";var n=function(){return document.addEventListener?function(t,e,n){t&&e&&n&&t.addEventListener(e,n,!1)}:function(t,e,n){t&&e&&n&&t.attachEvent(\"on\"+e,n)}}(),i=function(){return document.removeEventListener?function(t,e,n){t&&e&&t.removeEventListener(e,n,!1)}:function(t,e,n){t&&e&&t.detachEvent(\"on\"+e,n)}}(),s=function(t,e,s){var r=function a(){s&&s.apply(this,arguments),i(t,e,a)};n(t,e,r)};t.exports={on:n,off:i,once:s}},function(t,e,n){\"use strict\";var i=n(3),s=n(5),r=n(7),a=n(4);t.exports={on:s.on,off:s.off,once:s.once,getStyle:r.getStyle,setStyle:r.setStyle,removeClass:i.removeClass,addClass:i.addClass,hasClass:i.hasClass,create:a}},function(t,e){\"use strict\";function n(t){return t.replace(s,function(t,e,n,i){return i?n.toUpperCase():n}).replace(r,\"Moz$1\")}var i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t},s=/([\\:\\-\\_]+(.))/g,r=/^moz([A-Z])/,a=Number(document.documentMode),o=9>a?function(t,e){if(!t||!e)return null;e=n(e),\"float\"===e&&(e=\"styleFloat\");try{switch(e){case\"opacity\":try{return t.filters.item(\"alpha\").opacity/100}catch(i){return 1}break;default:return t.style[e]||t.currentStyle?t.currentStyle[e]:null}}catch(i){return t.style[e]}}:function(t,e){if(!t||!e)return null;e=n(e),\"float\"===e&&(e=\"cssFloat\");try{var i=document.defaultView.getComputedStyle(t,\"\");return t.style[e]||i?i[e]:null}catch(s){return t.style[e]}},l=function u(t,e,s){if(t&&e)if(\"object\"===(\"undefined\"==typeof e?\"undefined\":i(e)))for(var r in e)e.hasOwnProperty(r)&&u(t,r,e[r]);else e=n(e),\"opacity\"===e&&9>a?t.style.filter=isNaN(s)?\"\":\"alpha(opacity=\"+100*s+\")\":t.style[e]=s};t.exports={getStyle:o,setStyle:l}},function(t,e){},function(t,e){t.exports=\"<div class=swipe-item> <slot></slot> </div>\"},function(t,e){t.exports='<div class=swipe> <div class=swipe-items-wrap v-el:wrap> <slot></slot> </div> <div class=swipe-indicators v-show=showIndicators> <div class=swipe-indicator v-for=\"page in pages\" :class=\"{ active: $index === index }\"></div> </div> </div>'},function(t,e,n){var i,s;i=n(1),s=n(9),t.exports=i||{},t.exports.__esModule&&(t.exports=t.exports[\"default\"]),s&&((\"function\"==typeof t.exports?t.exports.options:t.exports).template=s)},function(t,e,n){var i,s;n(8),i=n(2),s=n(10),t.exports=i||{},t.exports.__esModule&&(t.exports=t.exports[\"default\"]),s&&((\"function\"==typeof t.exports?t.exports.options:t.exports).template=s)}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._vue-swipe@0.2.7@vue-swipe/dist/vue-swipe.js\n// module id = 76\n// module chunks = 2","/*!\n * Vue.js v1.0.28\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delimited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([^-])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/* istanbul ignore next */\nfunction isNative(Ctor) {\n  return (/native code/.test(Ctor.toString())\n  );\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc = undefined;\n\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var noop = function noop() {};\n    timerFunc = function () {\n      p.then(nextTickHandler);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) setTimeout(noop);\n    };\n  } else if (typeof MutationObserver !== 'undefined') {\n    // use MutationObserver where native Promise is not available,\n    // e.g. IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = setTimeout;\n  }\n\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar len;\nvar index;\nvar chr;\nvar state;\nvar startState = 0;\nvar filterState = 1;\nvar filterNameState = 2;\nvar filterArgState = 3;\n\nvar doubleChr = 0x22;\nvar singleChr = 0x27;\nvar pipeChr = 0x7C;\nvar escapeChr = 0x5C;\nvar spaceChr = 0x20;\n\nvar expStartChr = { 0x5B: 1, 0x7B: 1, 0x28: 1 };\nvar expChrPair = { 0x5B: 0x5D, 0x7B: 0x7D, 0x28: 0x29 };\n\nfunction peek() {\n  return str.charCodeAt(index + 1);\n}\n\nfunction next() {\n  return str.charCodeAt(++index);\n}\n\nfunction eof() {\n  return index >= len;\n}\n\nfunction eatSpace() {\n  while (peek() === spaceChr) {\n    next();\n  }\n}\n\nfunction isStringStart(chr) {\n  return chr === doubleChr || chr === singleChr;\n}\n\nfunction isExpStart(chr) {\n  return expStartChr[chr];\n}\n\nfunction isExpEnd(start, chr) {\n  return expChrPair[start] === chr;\n}\n\nfunction parseString() {\n  var stringQuote = next();\n  var chr;\n  while (!eof()) {\n    chr = next();\n    // escape char\n    if (chr === escapeChr) {\n      next();\n    } else if (chr === stringQuote) {\n      break;\n    }\n  }\n}\n\nfunction parseSpecialExp(chr) {\n  var inExp = 0;\n  var startChr = chr;\n\n  while (!eof()) {\n    chr = peek();\n    if (isStringStart(chr)) {\n      parseString();\n      continue;\n    }\n\n    if (startChr === chr) {\n      inExp++;\n    }\n    if (isExpEnd(startChr, chr)) {\n      inExp--;\n    }\n\n    next();\n\n    if (inExp === 0) {\n      break;\n    }\n  }\n}\n\n/**\n * syntax:\n * expression | filterName  [arg  arg [| filterName arg arg]]\n */\n\nfunction parseExpression() {\n  var start = index;\n  while (!eof()) {\n    chr = peek();\n    if (isStringStart(chr)) {\n      parseString();\n    } else if (isExpStart(chr)) {\n      parseSpecialExp(chr);\n    } else if (chr === pipeChr) {\n      next();\n      chr = peek();\n      if (chr === pipeChr) {\n        next();\n      } else {\n        if (state === startState || state === filterArgState) {\n          state = filterState;\n        }\n        break;\n      }\n    } else if (chr === spaceChr && (state === filterNameState || state === filterArgState)) {\n      eatSpace();\n      break;\n    } else {\n      if (state === filterState) {\n        state = filterNameState;\n      }\n      next();\n    }\n  }\n\n  return str.slice(start + 1, index) || null;\n}\n\nfunction parseFilterList() {\n  var filters = [];\n  while (!eof()) {\n    filters.push(parseFilter());\n  }\n  return filters;\n}\n\nfunction parseFilter() {\n  var filter = {};\n  var args;\n\n  state = filterState;\n  filter.name = parseExpression().trim();\n\n  state = filterArgState;\n  args = parseFilterArguments();\n\n  if (args.length) {\n    filter.args = args;\n  }\n  return filter;\n}\n\nfunction parseFilterArguments() {\n  var args = [];\n  while (!eof() && state !== filterState) {\n    var arg = parseExpression();\n    if (!arg) {\n      break;\n    }\n    args.push(processFilterArg(arg));\n  }\n\n  return args;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  dir = {};\n  len = str.length;\n  index = -1;\n  chr = '';\n  state = startState;\n\n  var filters;\n\n  if (str.indexOf('|') < 0) {\n    dir.expression = str.trim();\n  } else {\n    dir.expression = parseExpression().trim();\n    filters = parseFilterList();\n    if (filters.length) {\n      dir.filters = filters;\n    }\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIOS: isIOS,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to register itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression$1(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression$1(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\\"']|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression$1(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression$1,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression$1(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('v-if')) {\n      warn('<' + this.el.tagName.toLowerCase() + ' v-for=\"' + this.expression + '\" v-if=\"' + this.el.getAttribute('v-if') + '\">: ' + 'Using v-if and v-for on the same element is not recommended - ' + 'consider filtering the source Array instead.', this.vm);\n    }\n\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new instance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.get();\n      if (isArray(model)) {\n        var val = self.getValue();\n        var i = indexOf(model, val);\n        if (el.checked) {\n          if (i < 0) {\n            self.set(model.concat(val));\n          }\n        } else if (i > -1) {\n          self.set(model.slice(0, i).concat(model.slice(i + 1)));\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// logic control\n// two-way binding\n// event handling\n// attributes\n// ref & el\n// cloak\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var propsData = vm.$options.propsData;\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (propsData && (value = propsData[name] || propsData[path]) !== null) {\n      // has propsData\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required && (!propsData || !(name in propsData) && !(path in propsData))) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  sortDirectives(dirs);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * sort directives by priority (stable sort)\n *\n * @param {Array} dirs\n */\nfunction sortDirectives(dirs) {\n  if (dirs.length === 0) return;\n\n  var groupedMap = {};\n  var i, j, k, l;\n  var index = 0;\n  var priorities = [];\n  for (i = 0, j = dirs.length; i < j; i++) {\n    var dir = dirs[i];\n    var priority = dir.descriptor.def.priority || DEFAULT_PRIORITY;\n    var array = groupedMap[priority];\n    if (!array) {\n      array = groupedMap[priority] = [];\n      priorities.push(priority);\n    }\n    array.push(dir);\n  }\n\n  priorities.sort(function (a, b) {\n    return a > b ? -1 : a === b ? 0 : 1;\n  });\n  for (i = 0, j = priorities.length; i < j; i++) {\n    var group = groupedMap[priorities[i]];\n    for (k = 0, l = group.length; k < l; k++) {\n      dirs[index++] = group[k];\n    }\n  }\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n\n      var componentName = options.el.tagName.toLowerCase();\n      if (componentName === 'component' && options.name) {\n        componentName += ':' + options.name;\n      }\n\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + componentName + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    // a textarea which has v-pre attr should skip complie.\n    if (getAttr(el, 'v-pre') !== null) {\n      return skip;\n    }\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for, v-if and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    if (!replacer) {\n      return frag;\n    }\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression$1(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression$1(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression$1(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Order filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.28';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._vue@1.0.28@vue/dist/vue.common.js\n// module id = 77\n// module chunks = 2","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._css-loader@0.23.1@css-loader/lib/css-base.js\n// module id = 78\n// module chunks = 2","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._vue-style-loader@1.0.0@vue-style-loader/addStyles.js\n// module id = 79\n// module chunks = 2"],"sourceRoot":""}